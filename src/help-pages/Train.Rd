\name{Train}
\title{
Train
}
\alias{Train}
\description{
Trains the neural network on an input and expected output data set according to some training parameters.
}
\usage{
Train(network, input, output, epochs = 1, batch.size = 1, weights.lr = 0.01, biases.lr = 0.1, track.progress = FALSE, track.frequency = "epoch")
}
\arguments{
\item{network}{
list, neural network in standard format as generated by NetworkGenerator.
}
\item{input}{
matrix of numeric elements, input data set in standard format as read by DataSetReader.
}
\item{output}{
matrix of numeric elements, expected output data set in standard format as read by DataSetReader.
}
\item{epochs}{
numeric, number of epochs (number of times the network is trained on the entire data set).
}
\item{batch.size}{
numeric, frequency with which the network is updated.
}
\item{weights.lr}{
numeric, coefficient used to determine how significant each update to the weights is.
}
\item{biases.lr}{
numeric, coefficient used to determine how significant each update to the biases is.
}
\item{track.progress}{
logical, specifies whether or not to output counter for the progress of training and plot of network cost per unit.
}
\item{track.frequency}{
string, "epoch" or "batch", specifies the units of the plot of the cost.
}
}
\details{
When specifying batch size, this value must be a factor of the number of data sets.
}
\value{
Returns the neural network in the standard form for this library and the form with which it was provided as an input. See page on NetworkGenerator for more details.
}
\author{
Aaron Manning
}
\seealso{
[Web link for my documentation]
}
\examples{
# network <- Train(network, input = input.training, output = output.training, epochs = 3, batch.size = 5, weights.lr = 0.1, biases.lr = 0.1, track.progress = TRUE, track.frequency = "batch")
}